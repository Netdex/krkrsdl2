name: Continuous Integration
on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.build"
      - "**.in"
      - "**.yml"
  pull_request:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.build"
      - "**.in"
      - "**.yml"

jobs:
  build-web:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get update
      - run: sudo apt-get install build-essential libsdl2-dev git
      - uses: numworks/setup-emscripten@v1
        with:
          sdk: '2.0.13'
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - run: python -m pip install --upgrade meson ninja
      - run: meson setup build/ --cross-file ./external/meson_toolchains/emscripten_meson.ini
      - run: meson compile -C build
      - uses: actions/upload-artifact@master
        with:
          name: krkrsdl2-web
          path: |
            build/krkrsdl2.wasm
            build/krkrsdl2.js
            build/index.html
  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get update
      - run: sudo apt-get install build-essential libsdl2-dev
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - run: python -m pip install --upgrade meson ninja
      - run: meson setup build/
      - run: meson compile -C build
      - uses: actions/upload-artifact@master
        with:
          name: krkrsdl2-ubuntu
          path: build/krkrsdl2
  build-macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: brew update
      - run: brew install sdl2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - run: python -m pip install --upgrade meson ninja
      - run: meson setup build/
      - run: meson compile -C build
      - uses: actions/upload-artifact@master
        with:
          name: krkrsdl2-macos
          path: build/krkrsdl2

  create-release:
    needs: [build-web, build-ubuntu, build-macos]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download web artifact
      uses: actions/download-artifact@v1
      with:
        name: krkrsdl2-web

    - name: Download ubuntu artifact
      uses: actions/download-artifact@v1
      with:
        name: krkrsdl2-ubuntu

    - name: Download macos artifact
      uses: actions/download-artifact@v1
      with:
        name: krkrsdl2-macos

    - name: Prepare artifacts for release
      run: |
        7z a -tzip krkrsdl2-web.zip krkrsdl2-web/*
        7z a -tzip krkrsdl2-ubuntu.zip krkrsdl2-ubuntu/*
        7z a -tzip krkrsdl2-macos.zip krkrsdl2-macos/*

    - name: Create prerelease
      if: github.ref == 'refs/heads/main'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: "latest"
        title: "Latest development builds"
        files: |
          krkrsdl2-web.zip
          krkrsdl2-ubuntu.zip
          krkrsdl2-macos.zip
